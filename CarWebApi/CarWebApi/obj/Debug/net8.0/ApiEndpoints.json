[
  {
    "ContainingType": "Presentation.Controllers.RootController",
    "Method": "GetRoot",
    "RelativePath": "api",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Accept",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [],
    "EndpointName": "GetRoot"
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "RegisterUser",
    "RelativePath": "api/authentication",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegistrationDto",
        "Type": "Entities.DataTransferObjects.UserForRegistrationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Authenicate",
    "RelativePath": "api/authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Entities.DataTransferObjects.UserForAuthenticationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Refresh",
    "RelativePath": "api/authentication/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenDto",
        "Type": "Entities.DataTransferObjects.TokenDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsV2Controller",
    "Method": "GetCarsAsync",
    "RelativePath": "api/cars",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "GetCarsAsync",
    "RelativePath": "api/Cars",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Brand",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Model",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "MinYears",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "MaxYears",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "ValidYearsRange",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "MinPrice",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "MaxPrice",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "ValidPriceRange",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [],
    "EndpointName": "GetCarsAsync"
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "GetCarsAsync",
    "RelativePath": "api/Cars",
    "HttpMethod": "HEAD",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Brand",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Model",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "MinYears",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "MaxYears",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "ValidYearsRange",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "MinPrice",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "MaxPrice",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "ValidPriceRange",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "AddACarAsync",
    "RelativePath": "api/Cars",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "carDto",
        "Type": "Entities.DataTransferObjects.CarDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [],
    "EndpointName": "AddACarAsync"
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "GetCarOptions",
    "RelativePath": "api/Cars",
    "HttpMethod": "OPTIONS",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "GetACarByIdAsync",
    "RelativePath": "api/Cars/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "UpdetaCarAsync",
    "RelativePath": "api/Cars/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "carDto",
        "Type": "Entities.DataTransferObjects.CarDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "DeleteACarAsync",
    "RelativePath": "api/Cars/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "UpdateOneThingOnCarAsync",
    "RelativePath": "api/Cars/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "carPatch",
        "Type": "Microsoft.AspNetCore.JsonPatch.JsonPatchDocument\u00601[[Entities.DataTransferObjects.CarDtoForUpdate, Entities, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CarsController",
    "Method": "GetAllACarsWithDetailsAsync",
    "RelativePath": "api/Cars/details",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "GetAllCategories",
    "RelativePath": "api/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "Get",
    "RelativePath": "api/categories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.FilesController",
    "Method": "Download",
    "RelativePath": "api/files/download",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filename",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.FilesController",
    "Method": "Upload",
    "RelativePath": "api/files/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]